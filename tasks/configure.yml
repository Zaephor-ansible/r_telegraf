---
- stat:
    path: /var/run/docker.sock
  register: stat_docker

- stat:
    path: /usr/bin/nvidia-smi
  register: stat_nvidia

- name: Build inputs bundle
  when: "item.when|default(true)"
  set_fact:
    telegraf_inputs_cfg: "{{ telegraf_inputs_cfg | default({}) | combine ({ item.input : (item.config|default([])) }) }}"
  loop:
  - { 'input': 'cpu', 'config': ['percpu = true', 'totalcpu = true', 'collect_cpu_time = false', 'report_active = false']  }
  - { 'input': 'disk', 'config': ['ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]']  }
  - { 'input': 'diskio', 'config': []  }
  - { 'input': 'docker', 'config': ['endpoint = "unix:///var/run/docker.sock"', 'source_tag = true', 'perdevice = true'] , 'when': '{{ stat_docker.stat.exists}}' }
  - { 'input': 'iptables', 'config': []  }
  - { 'input': 'kernel', 'config': []  }
  - { 'input': 'mem', 'config': []  }
  - { 'input': 'net', 'config': []  }
  - { 'input': 'netstat', 'config': []  }
  - { 'input': 'nvidia_smi', 'config': [] , 'when': '{{stat_nvidia.stat.exists}}' }
  - { 'input': 'processes', 'config': []  }
  - { 'input': 'swap', 'config': []  }
  - { 'input': 'system', 'config': []  }
  - { 'input': 'temp', 'config': []  }


- name: Install config files
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    force: "{{ item.force }}"
  with_items:
    - { src: 'etc_telegraf_telegraf.conf.j2', dest: '/etc/telegraf/telegraf.conf', owner: 'root', group: 'root', mode: '0644', force: 'yes' }
  register: telegraf_configfiles

- getent:
    database: group
    split: ':'
  become: yes

- name: Add additional group to user
  become: yes
  register: telegraf_usergroups
  user:
    name: "telegraf"
    groups: "{{item}}"
    append: yes
  when: item in ansible_facts.getent_group
  with_items:
  - docker

- name: "Empty variable"
  set_fact:
    telegraf_inputs_cfg: {}
